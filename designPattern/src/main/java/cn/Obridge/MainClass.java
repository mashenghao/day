package cn.Obridge;
/**
 * 	桥接模式
 * 	桥接模式，类似于策略模式，
 * 1.策略模式是，策略的引用有多个子类，调用的话，
 * 	只有一个类去调用，是调用类的方法去调用策略引用，调用类不变。
 * 2.桥接模式是，桥接的引用也有多个子类，调用的话，
 * 	引用的话，也是有多个子类的，在引用处，可以有多个子类
 * 
 * 	策略模式注重是方法的调用，包装了不同算法的实现
 * 	桥接模式注重的是结构的构造，扩展了实现。
 * 
 *  案例是将汽车有安装引擎的操作，由于引擎不同，将引擎和汽车做成
 *  桥接模式，汽车中含有引擎的引用。引擎做成接口，让子类实现不同的引擎
 *  规格。汽车哪儿，则去调用子类引擎。由于汽车规格也不近相同，所以汽车也做成了
 *  抽象模式，不同汽车也有不同的规格。比如有吉普车，去安装200的引擎。也有公交车
 *  安装300c的引擎。而策略模式，只是利用实现算法的封装，只能是策略算法能扩展，引用哪儿调用
 *  桥接这个是两面都有扩展，但有个桥，做着关联。（比较两种模式的图结构）。
 *  
 * @author  mahao
 * @date:  2018年10月29日 下午9:58:21
 */
public class MainClass {
	
	public static void main(String[] args) {
		// 1.生成引擎实例
		Engine engine200 = new Engine200();
		//2.生成汽车实例
		//3.建立汽车与引擎之间的联系
		Car car = new JeepCar(engine200);
		//4.调用方法
		car.makeCar();
		
		//给公交车安装220的引擎
		Engine engine220 = new Engine220();
		Car busCar = new BusCar(engine220);
		busCar.makeCar();
	}
}
